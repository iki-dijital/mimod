@use 'sass:map';
@use 'sass:math';
@use 'sass:string';
@use 'sass:list';
@use 'sass:meta';

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
);

$grid-gutter: 24px;
$number-of-col: 12;
$is-mobile-first: false;
$container-no-padding: false;

$spacing-utilities: ();
$spacer: 4px;
$spacer-limit: 25;
$spacing-range: ();
$width-range: ();

$has-rtl: false;
$font-rem: false;

$utilities: (
  'display': (
    property: display,
    isActive: true,
    values: (
      block: block,
      flex: flex,
      grid: grid,
      inline-block: inline-block,
      inline-flex: inline-flex,
      hidden: none,
    ),
  ),
  'position': (
    property: position,
    isActive: true,
    values: (
      relative: relative,
      absolute: absolute,
      fixed: fixed,
    ),
  ),
  'align-items': (
    property: align-items,
    isActive: true,
    values: (
      items-start: flex-start,
      items-end: flex-end,
      items-center: center,
      items-baseline: baseline,
      items-stretch: stretch,
    ),
  ),
  'align-content': (
    property: align-content,
    isActive: true,
    values: (
      content-normal: normal,
      content-start: flex-start,
      content-end: flex-end,
      content-center: center,
      content-between: space-between,
      content-around: space-around,
      content-evenly: space-evenly,
    ),
  ),
  'align-self': (
    property: align-self,
    isActive: true,
    values: (
      self-auto: auto,
      self-start: flex-start,
      self-end: flex-end,
      self-center: center,
      self-stretch: stretch,
      self-baseline: baseline,
    ),
  ),
  'place-items': (
    property: place-items,
    isActive: true,
    values: (
      place-items-start: start,
      place-items-end: end,
      place-items-center: center,
      place-items-stretch: stretch,
      place-items-baseline: baseline,
    ),
  ),
  'place-content': (
    property: place-content,
    isActive: true,
    values: (
      place-content-center: center,
      place-content-start: start,
      place-content-end: end,
      place-content-between: space-between,
      place-content-around: space-around,
      place-content-evenly: space-evenly,
      place-content-stretch: stretch,
      place-content-baseline: baseline,
    ),
  ),
  'place-self': (
    property: place-self,
    isActive: true,
    values: (
      place-self-auto: auto,
      place-self-start: start,
      place-self-end: end,
      place-self-center: center,
      place-self-stretch: stretch,
    ),
  ),
  'justify-content': (
    property: justify-content,
    isActive: true,
    values: (
      justify-normal: normal,
      justify-start: start,
      justify-end: end,
      justify-center: center,
      justify-between: space-between,
    ),
  ),
  'justify-items': (
    property: justify-items,
    isActive: true,
    values: (
      justify-items-start: start,
      justify-items-end: end,
      justify-items-center: center,
      justify-items-stretch: stretch,
    ),
  ),
  'justify-self': (
    property: justify-self,
    isActive: true,
    values: (
      justify-self-auto: auto,
      justify-self-start: start,
      justify-self-end: end,
      justify-self-center: center,
      justify-self-stretch: stretch,
    ),
  ),
  'flex-direction': (
    property: flex-direction,
    isActive: true,
    values: (
      flex-row: row,
      flex-row-reverse: row-reverse,
      flex-col: column,
      flex-col-reverse: column-reverse,
    ),
  ),
  'flex-wrap': (
    property: flex-wrap,
    isActive: true,
    values: (
      flex-wrap: wrap,
      flex-wrap-reverse: wrap-reverse,
      flex-nowrap: nowrap,
    ),
  ),
  'flex-status': (
    property: flex,
    isActive: true,
    values: (
      flex-1: 1 1 0%,
      flex-auto: 1 1 auto,
      flex-initial: 0 1 auto,
      flex-none: none,
    ),
  ),
  'flex-grow': (
    property: flex-grow,
    isActive: true,
    values: (
      grow: 1,
      grow-0: 0,
    ),
  ),
  'flex-shrink': (
    property: flex-shrink,
    isActive: true,
    values: (
      shrink: 1,
      shrink-0: 0,
    ),
  ),
  'text-align': (
    property: text-align,
    isActive: true,
    values: (
      text-left: left,
      text-center: center,
      text-right: right,
      text-justify: justify,
      text-start: start,
      text-end: end,
    ),
  ),
  'font-weight': (
    property: font-weight,
    isActive: true,
    values: (
      font-thin: 100,
      font-extralight: 200,
      font-light: 300,
      font-regular: 400,
      font-medium: 500,
      font-semibold: 600,
      font-bold: 700,
      font-extrabold: 800,
      font-black: 900,
    ),
  ),
  'object-fit': (
    property: object-fit,
    isActive: true,
    values: (
      object-contain: contain,
      object-cover: cover,
      object-fill: fill,
      object-none: none,
    ),
  ),
  'object-position': (
    property: object-position,
    isActive: true,
    values: (
      object-center: center,
      object-top: top,
      object-bottom: bottom,
      object-left: left,
      object-right: right,
      object-left-top: left top,
      object-right-top: right top,
      object-right-bottom: right bottom,
      object-left-bottom: left bottom,
    ),
  ),
  'user-select': (
    property: user-select,
    isActive: true,
    values: (
      select-none: none,
      select-text: text,
      select-all: all,
      select-auto: auto,
    ),
  ),
  'pointer-events': (
    property: pointer-events,
    isActive: true,
    values: (
      pointer-events-none: none,
      pointer-events-auto: auto,
    ),
  ),
  'whitespaces': (
    property: white-space,
    isActive: true,
    values: (
      whitespace-normal: normal,
      whitespace-nowrap: nowrap,
      whitespace-pre: pre,
      whitespace-pre-line: pre-line,
      whitespace-pre-wrap: pre-wrap,
    ),
  ),
  'font-sizes': (
    property: font-size,
    isActive: true,
    values: (
      text-xs: if($font-rem, 0.75rem, 12px),
      text-sm: if($font-rem, 0.875rem, 14px),
      text-base: if($font-rem, 1rem, 16px),
      text-lg: if($font-rem, 1.125rem, 18px),
      text-xl: if($font-rem, 1.25rem, 20px),
      text-2xl: if($font-rem, 1.5rem, 24px),
      text-3xl: if($font-rem, 1.875rem, 30px),
      text-4xl: if($font-rem, 2.25rem, 36px),
      text-5xl: if($font-rem, 3rem, 48px),
      text-6xl: if($font-rem, 3.75rem, 60px),
      text-7xl: if($font-rem, 4.5rem, 72px),
      text-8xl: if($font-rem, 6rem, 96px),
      text-9xl: if($font-rem, 8rem, 128px),
    ),
  ),
  'line-heights': (
    property: line-height,
    isActive: true,
    values: (
      leading-none: 1,
      leading-tight: 1.25,
      leading-snug: 1.375,
      leading-normal: 1.5,
      leading-relaxes: 1.625,
      leading-loose: 2,
    ),
  ),
  'overflows': (
    property: overflow,
    isActive: true,
    values: (
      overflow-hidden: hidden,
      overflow-auto: auto,
      overflow-scroll: scroll,
      overflow-visible: visible,
    ),
  ),
  'ratios': (
    property: aspect-ratio,
    isActive: true,
    values: (
      aspect-auto: auto,
      aspect-square: string.unquote('1/1'),
      aspect-video: string.unquote('16/9'),
    ),
  ),
  'bg-positions': (
    property: background-position,
    isActive: true,
    values: (
      bg-bottom: bottom,
      bg-center: center,
      bg-left: left,
      bg-left-bottom: left bottom,
      bg-left-top: left top,
      bg-right: right,
      bg-right-bottom: right bottom,
      bg-right-top: right top,
      bg-top: top,
    ),
  ),
  'bg-repeat': (
    property: background-repeat,
    isActive: true,
    values: (
      bg-repeat: repeat,
      bg-no-repeat: no-repeat,
    ),
  ),
  'bg-size': (
    property: background-size,
    isActive: true,
    values: (
      bg-auto: auto,
      bg-cover: cover,
      bg-contain: contain,
    ),
  ),
  'cursor': (
    property: cursor,
    isActive: true,
    values: (
      cursor-pointer: pointer,
    ),
  ),
  'borders': (
    property: border-style,
    isActive: true,
    values: (
      border-none: none,
      border-solid: solid,
      border-dashed: dashed,
      border-dotted: dotted,
    ),
  ),
  'border-radiuses': (
    property: border-radius,
    isActive: true,
    values: (
      rounded-none: 0,
      rounded-sm: 2px,
      rounded: 4px,
      rounded-md: 6px,
      rounded-lg: 8px,
      rounded-xl: 12px,
      rounded-2xl: 16px,
      rounded-3xl: 24px,
      rounded-full: 9999px,
    ),
  ),
  'appearance': (
    property: appearance,
    isActive: true,
    values: (
      appearance-none: none,
    ),
  ),
  'transition-property': (
    property: transition-property,
    isActive: true,
    values: (
      transition-none: none,
      transition-all: string.unquote('all'),
      transition-colors:
        string.unquote('color, background-color, border-color, text-decoration-color, fill, stroke'),
      transition-margin: string.unquote('margin'),
      transition-padding: string.unquote('padding'),
      transition-opacity: string.unquote('opacity'),
      transition-shadow: string.unquote('box-shadow'),
      transition-transform: string.unquote('transform'),
    ),
  ),
);

$space-directions: (
  't': if($has-rtl, 'block-start', 'top'),
  'b': if($has-rtl, 'block-end', 'bottom'),
  'l': if($has-rtl, 'inline-start', 'left'),
  'r': if($has-rtl, 'inline-end', 'right'),
  'x': if($has-rtl, 'inline', ('left', 'right')),
  'y': if($has-rtl, 'block', ('top', 'bottom')),
);

$position-directions: (
  'top': if($has-rtl, 'inset-block-start', 'top'),
  'bottom': if($has-rtl, 'inset-block-end', 'bottom'),
  'left': 'left',
  'right': 'right',
);

$gap-directions: (
  'x': 'column-gap',
  'y': 'row-gap',
);

@if ($has-rtl == true) {
  $position-directions: map.merge(
    $position-directions,
    (
      'start': 'inset-inline-start',
      'end': 'inset-inline-end',
    )
  );
}
